<?php

use Drupal\node\NodeInterface;
use Drupal\comment\Entity\Comment;

ini_set("allow_url_fopen", 1);

// use insert here
function reviewapi_node_presave(NodeInterface $node){

    if ( is_null($node) ){
        \Drupal::messenger()->addMessage("Node not found...");
    }

    if ($node->getType() == 'news' and $node->isPublished()) {

        $gameID = $node->get('field_gameid')->getValue();

        if ( $gameID != [] ) {

            $query = http_build_query(array('json'=>'1'));

            $url = "https://store.steampowered.com/appreviews/". $gameID[0]['value'] . "?" . $query;

            $result = file_get_contents($url);

            $data = json_decode($result, TRUE);

            // Creating the comment

            foreach($data['reviews'] as $review) {

                $values = [
 
                    // These values are for the entity that you're creating the comment for, not the comment itself.
                    'entity_type' => 'node',            // required.
                    'entity_id'   => $node->id(),                // required.
                    'field_name'  => 'comment',         // required.
                
                    // The user id of the comment's 'author'. Use 0 for the anonymous user.
                    'uid' => 0,                         // required.
                
                    // These values are for the comment itself.
                    'comment_type' => 'comment',        // required.
                    'subject' => strval($review['author']['steamid']),  // required.
                    'comment_body' => $review['review'],      // optional.
                
                    // Whether the comment is 'approved' or not.
                    'status' => 1,                      // optional. Defaults to 0.
                ];
                
                // This will create an actual comment entity out of our field values.
                $comment = Comment::create($values);
                
                // Last, we actually need to save the comment to the database.
                $comment->save();
                
            } 
            
            // dpm(get_defined_vars());

            \Drupal::messenger()->addMessage(t("ReviewAPI found " . count($data['reviews']) . " reviews for this game!"));

        } else {

            \Drupal::messenger()->addMessage(t('ReviewAPI found no reviews for this game...'));

            return false;

        }
       
    } 

}